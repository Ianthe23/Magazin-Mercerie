// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using magazin_mercerie;

#nullable disable

namespace magazinmercerie.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250601090454_FixComandaProduseColumnName")]
    partial class FixComandaProduseColumnName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Comanda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AngajatId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AngajatId");

                    b.HasIndex("ClientId");

                    b.ToTable("Comenzi");
                });

            modelBuilder.Entity("ComandaProdus", b =>
                {
                    b.Property<Guid>("ComandaId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProdusId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CantitateComanda")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PretLaComanda")
                        .HasColumnType("TEXT");

                    b.HasKey("ComandaId", "ProdusId");

                    b.HasIndex("ProdusId");

                    b.ToTable("ComandaProduse");
                });

            modelBuilder.Entity("Produs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cantitate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Pret")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tip")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Produse");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nume")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Utilizatori");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AngajatMagazin", b =>
                {
                    b.HasBaseType("User");

                    b.Property<int>("Tip")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("AngajatMagazin");
                });

            modelBuilder.Entity("Client", b =>
                {
                    b.HasBaseType("User");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("Angajat", b =>
                {
                    b.HasBaseType("AngajatMagazin");

                    b.Property<int>("Salariu")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Angajat");
                });

            modelBuilder.Entity("Patron", b =>
                {
                    b.HasBaseType("AngajatMagazin");

                    b.HasDiscriminator().HasValue("Patron");
                });

            modelBuilder.Entity("Comanda", b =>
                {
                    b.HasOne("Angajat", "Angajat")
                        .WithMany("Comenzi")
                        .HasForeignKey("AngajatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Client", "Client")
                        .WithMany("Comenzi")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Angajat");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("ComandaProdus", b =>
                {
                    b.HasOne("Comanda", "Comanda")
                        .WithMany("ComandaProduse")
                        .HasForeignKey("ComandaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Produs", "Produs")
                        .WithMany()
                        .HasForeignKey("ProdusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comanda");

                    b.Navigation("Produs");
                });

            modelBuilder.Entity("Comanda", b =>
                {
                    b.Navigation("ComandaProduse");
                });

            modelBuilder.Entity("Client", b =>
                {
                    b.Navigation("Comenzi");
                });

            modelBuilder.Entity("Angajat", b =>
                {
                    b.Navigation("Comenzi");
                });
#pragma warning restore 612, 618
        }
    }
}
